DROP TABLE IF EXISTS camera_logevent_notReadyToTakeImage;
CREATE TABLE camera_logevent_notReadyToTakeImage (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_startIntegration;
CREATE TABLE camera_logevent_startIntegration (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  imageName varchar(32),
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_GAS;
CREATE TABLE camera_GAS (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Board_ID smallint,
  Board_current_1 float,
  Board_current_2 float,
  Board_current_3 float,
  Board_current_4 float,
  Board_temp_1 float,
  Board_temp_2 float,
  Board_temp_3 float,
  Board_temp_4 float,
  Board_temp_5 float,
  Board_temp_6 float,
  Board_temp_7 float,
  Board_temp_8 float,
  Board_temp_9 float,
  Board_temp_10 float,
  Board_temp_11 float,
  Board_temp_12 float,
  Board_voltage_1 float,
  Board_voltage_2 float,
  Board_voltage_3 float,
  Board_voltage_4 float,
  CABAC_MUX_1 int,
  CABAC_MUX_2 int,
  CABAC_MUX_3 int,
  CABAC_MUX_4 int,
  CCD_ID smallint,
  CCD_temp float,
  FPGACheckSum_1 int,
  FPGACheckSum_2 int,
  REB_ID smallint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_commandLog;
CREATE TABLE camera_commandLog (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_seqNum int,
  name varchar(128),
  ack int,
  error int,
  PRIMARY KEY (date_time)
);

DROP TABLE IF EXISTS camera_Cold;
CREATE TABLE camera_Cold (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Compressor_load_1 float,
  Compressor_load_2 float,
  Compressor_load_3 float,
  Compressor_load_4 float,
  Compressor_load_5 float,
  Compressor_load_6 float,
  Compressor_speed_1 float,
  Compressor_speed_2 float,
  Compressor_speed_3 float,
  Compressor_speed_4 float,
  Compressor_speed_5 float,
  Compressor_speed_6 float,
  Discharge_pressure_1 float,
  Discharge_pressure_2 float,
  Discharge_pressure_3 float,
  Discharge_pressure_4 float,
  Discharge_pressure_5 float,
  Discharge_pressure_6 float,
  Discharge_temp_1 float,
  Discharge_temp_2 float,
  Discharge_temp_3 float,
  Discharge_temp_4 float,
  Discharge_temp_5 float,
  Discharge_temp_6 float,
  Flow_interlock_1 smallint,
  Flow_interlock_2 smallint,
  Flow_interlock_3 smallint,
  Flow_interlock_4 smallint,
  Flow_interlock_5 smallint,
  Flow_interlock_6 smallint,
  Heater_current_1 float,
  Heater_current_2 float,
  Heater_current_3 float,
  Heater_current_4 float,
  Heater_current_5 float,
  Heater_current_6 float,
  Heater_voltage_1 float,
  Heater_voltage_2 float,
  Heater_voltage_3 float,
  Heater_voltage_4 float,
  Heater_voltage_5 float,
  Heater_voltage_6 float,
  Intake_flow_1 float,
  Intake_flow_2 float,
  Intake_flow_3 float,
  Intake_flow_4 float,
  Intake_flow_5 float,
  Intake_flow_6 float,
  Intake_pressure_1 float,
  Intake_pressure_2 float,
  Intake_pressure_3 float,
  Intake_pressure_4 float,
  Intake_pressure_5 float,
  Intake_pressure_6 float,
  Intake_temp_1 float,
  Intake_temp_2 float,
  Intake_temp_3 float,
  Intake_temp_4 float,
  Intake_temp_5 float,
  Intake_temp_6 float,
  Ion_pump_1 float,
  Ion_pump_2 float,
  Ion_pump_3 float,
  Ion_pump_4 float,
  Mech_pump_1 smallint,
  Mech_pump_2 smallint,
  Mech_pump_3 smallint,
  Mech_pump_4 smallint,
  Post_expansion_pressure_1 float,
  Post_expansion_pressure_2 float,
  Post_expansion_pressure_3 float,
  Post_expansion_pressure_4 float,
  Post_expansion_pressure_5 float,
  Post_expansion_pressure_6 float,
  Post_expansion_temp_1 float,
  Post_expansion_temp_2 float,
  Post_expansion_temp_3 float,
  Post_expansion_temp_4 float,
  Post_expansion_temp_5 float,
  Post_expansion_temp_6 float,
  Pre_expansion_pressure_1 float,
  Pre_expansion_pressure_2 float,
  Pre_expansion_pressure_3 float,
  Pre_expansion_pressure_4 float,
  Pre_expansion_pressure_5 float,
  Pre_expansion_pressure_6 float,
  Pre_expansion_temp_1 float,
  Pre_expansion_temp_2 float,
  Pre_expansion_temp_3 float,
  Pre_expansion_temp_4 float,
  Pre_expansion_temp_5 float,
  Pre_expansion_temp_6 float,
  RGA_1 int,
  RGA_2 int,
  RGA_3 int,
  RGA_4 int,
  RGA_5 int,
  RGA_6 int,
  RGA_7 int,
  RGA_8 int,
  RGA_9 int,
  RGA_10 int,
  Return_temp_1 float,
  Return_temp_2 float,
  Return_temp_3 float,
  Return_temp_4 float,
  Return_temp_5 float,
  Return_temp_6 float,
  UtilityRoom_temperature float,
  Vacuum_gauge_1 float,
  Vacuum_gauge_2 float,
  Vacuum_gauge_3 float,
  Vacuum_gauge_4 float,
  Vacuum_gauge_5 float,
  Valve_status_1 smallint,
  Valve_status_2 smallint,
  Valve_status_3 smallint,
  Valve_status_4 smallint,
  Valve_status_5 smallint,
  Valve_status_6 smallint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_CCS;
CREATE TABLE camera_CCS (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  CCS_Status_1 int,
  CCS_Status_2 int,
  CCS_Status_3 int,
  CCS_Status_4 int,
  CCS_Status_5 int,
  CCS_Status_6 int,
  CCS_Status_7 int,
  CCS_Status_8 int,
  CCS_Status_9 int,
  CCS_Status_10 int,
  CCS_Status_11 int,
  CCS_Status_12 int,
  CCS_Status_13 int,
  CCS_Status_14 int,
  CCS_Status_15 int,
  CCS_Status_16 int,
  CCS_Status_17 int,
  CCS_Status_18 int,
  CCS_Status_19 int,
  CCS_Status_20 int,
  Image_Status_1 int,
  Image_Status_2 int,
  Image_Status_3 int,
  Image_Status_4 int,
  Image_Status_5 int,
  Image_Status_6 int,
  Image_Status_7 int,
  Image_Status_8 int,
  Image_Status_9 int,
  Image_Status_10 int,
  Image_Status_11 int,
  Image_Status_12 int,
  Image_Status_13 int,
  Image_Status_14 int,
  Image_Status_15 int,
  Image_Status_16 int,
  Image_Status_17 int,
  Image_Status_18 int,
  Image_Status_19 int,
  Image_Status_20 int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_SAS;
CREATE TABLE camera_SAS (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Board_ID smallint,
  Board_current_1 float,
  Board_current_2 float,
  Board_current_3 float,
  Board_current_4 float,
  Board_temp_1 float,
  Board_temp_2 float,
  Board_temp_3 float,
  Board_temp_4 float,
  Board_temp_5 float,
  Board_temp_6 float,
  Board_temp_7 float,
  Board_temp_8 float,
  Board_temp_9 float,
  Board_temp_10 float,
  Board_temp_11 float,
  Board_temp_12 float,
  Board_voltage_1 float,
  Board_voltage_2 float,
  Board_voltage_3 float,
  Board_voltage_4 float,
  CABAC_MUX_1 int,
  CABAC_MUX_2 int,
  CABAC_MUX_3 int,
  CABAC_MUX_4 int,
  CABAC_MUX_5 int,
  CABAC_MUX_6 int,
  CABAC_MUX_7 int,
  CABAC_MUX_8 int,
  CABAC_MUX_9 int,
  CABAC_MUX_10 int,
  CABAC_MUX_11 int,
  CABAC_MUX_12 int,
  CCD_ID_1 smallint,
  CCD_ID_2 smallint,
  CCD_ID_3 smallint,
  CCD_temp_1 int,
  CCD_temp_2 int,
  CCD_temp_3 int,
  FPGACheckSum_1 int,
  FPGACheckSum_2 int,
  FPGACheckSum_3 int,
  FPGACheckSum_4 int,
  FPGACheckSum_5 int,
  FPGACheckSum_6 int,
  REB_ID smallint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_WDS;
CREATE TABLE camera_WDS (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  REB_ID smallint,
  Timing_parameter_1 int,
  Timing_parameter_2 int,
  Timing_parameter_3 int,
  Timing_parameter_4 int,
  Timing_parameter_5 int,
  Timing_parameter_6 int,
  Timing_parameter_7 int,
  Timing_parameter_8 int,
  Timing_parameter_9 int,
  Timing_parameter_10 int,
  flag_1 int,
  flag_2 int,
  flag_3 int,
  flag_4 int,
  flag_5 int,
  flag_6 int,
  flag_7 int,
  flag_8 int,
  flag_9 int,
  flag_10 int,
  flag_11 int,
  flag_12 int,
  flag_13 int,
  flag_14 int,
  flag_15 int,
  flag_16 int,
  flag_17 int,
  flag_18 int,
  flag_19 int,
  flag_20 int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_SettingVersions;
CREATE TABLE camera_logevent_SettingVersions (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  recommendedSettingVersion varchar(32),
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_command_standby;
CREATE TABLE camera_command_standby (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_SummaryState;
CREATE TABLE camera_logevent_SummaryState (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  SummaryStateValue int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_AppliedSettingsMatchStart;
CREATE TABLE camera_logevent_AppliedSettingsMatchStart (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  appliedSettingsMatchStartIsTrue tinyint,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_ccsConfigured;
CREATE TABLE camera_logevent_ccsConfigured (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_command_stop;
CREATE TABLE camera_command_stop (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_endLoadFilter;
CREATE TABLE camera_logevent_endLoadFilter (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_SDS;
CREATE TABLE camera_SDS (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  REB_ID smallint,
  Timing_parameter_1 int,
  Timing_parameter_2 int,
  Timing_parameter_3 int,
  Timing_parameter_4 int,
  Timing_parameter_5 int,
  Timing_parameter_6 int,
  Timing_parameter_7 int,
  Timing_parameter_8 int,
  Timing_parameter_9 int,
  Timing_parameter_10 int,
  flag_1 int,
  flag_2 int,
  flag_3 int,
  flag_4 int,
  flag_5 int,
  flag_6 int,
  flag_7 int,
  flag_8 int,
  flag_9 int,
  flag_10 int,
  flag_11 int,
  flag_12 int,
  flag_13 int,
  flag_14 int,
  flag_15 int,
  flag_16 int,
  flag_17 int,
  flag_18 int,
  flag_19 int,
  flag_20 int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_command_initImage;
CREATE TABLE camera_command_initImage (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  deltaT double,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_command_setFilter;
CREATE TABLE camera_command_setFilter (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  name varchar(32),
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_startReadout;
CREATE TABLE camera_logevent_startReadout (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_ErrorCode;
CREATE TABLE camera_logevent_ErrorCode (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  errorCode int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_command_enterControl;
CREATE TABLE camera_command_enterControl (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_command_enable;
CREATE TABLE camera_command_enable (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_Filter;
CREATE TABLE camera_Filter (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Loader_telemetry int,
  REB_ID smallint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_Cryo;
CREATE TABLE camera_Cryo (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Cold_temperature_1 float,
  Cold_temperature_2 float,
  Cold_temperature_3 float,
  Compressor float,
  Compressor_speed_1 float,
  Compressor_speed_2 float,
  Cryo_temperature_1 float,
  Cryo_temperature_2 float,
  Cryo_temperature_3 float,
  Cryo_temperature_4 float,
  Cryo_temperature_5 float,
  Cryo_temperature_6 float,
  Cryo_temperature_7 float,
  Cryo_temperature_8 float,
  Cryo_temperature_9 float,
  Cryo_temperature_10 float,
  Cryo_temperature_11 float,
  Cryo_temperature_12 float,
  Discharge_pressure_1 float,
  Discharge_pressure_2 float,
  Discharge_temp_1 float,
  Discharge_temp_2 float,
  Flow_interlock_1 smallint,
  Flow_interlock_2 smallint,
  Heater_current_1 float,
  Heater_current_2 float,
  Heater_current_3 float,
  Heater_current_4 float,
  Heater_current_5 float,
  Heater_current_6 float,
  Heater_voltage_1 float,
  Heater_voltage_2 float,
  Heater_voltage_3 float,
  Heater_voltage_4 float,
  Heater_voltage_5 float,
  Heater_voltage_6 float,
  Intake_flow_1 float,
  Intake_flow_2 float,
  Intake_pressure_1 float,
  Intake_pressure_2 float,
  Intake_temp_1 float,
  Intake_temp_2 float,
  Post_expansion_pressure_1 float,
  Post_expansion_pressure_2 float,
  Post_expansion_temp_1 float,
  Post_expansion_temp_2 float,
  Pre_expansion_pressure_1 float,
  Pre_expansion_pressure_2 float,
  Pre_expansion_temp_1 float,
  Pre_expansion_temp_2 float,
  Return_temp_1 float,
  Return_temp_2 float,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_Purge;
CREATE TABLE camera_Purge (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Accelerometer_1 float,
  Accelerometer_2 float,
  Accelerometer_3 float,
  Accelerometer_4 float,
  Accelerometer_5 float,
  Accelerometer_6 float,
  Blower_setting float,
  Blower_speed float,
  Body_Flow_meter float,
  Body_Temp float,
  Heater_current float,
  Heaters float,
  Microphone int,
  Trunk_Flow_meter float,
  Trunk_Temp float,
  Valve_setting int,
  Valves int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_command_takeImages;
CREATE TABLE camera_command_takeImages (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  numImages int,
  expTime double,
  shutter tinyint,
  science tinyint,
  guide tinyint,
  wfs tinyint,
  imageSequenceName varchar(32),
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_command_disable;
CREATE TABLE camera_command_disable (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_endRotateCarousel;
CREATE TABLE camera_logevent_endRotateCarousel (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_startRotateCarousel;
CREATE TABLE camera_logevent_startRotateCarousel (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_endSetFilter;
CREATE TABLE camera_logevent_endSetFilter (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_command_start;
CREATE TABLE camera_command_start (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  configuration varchar(32),
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_startShutterClose;
CREATE TABLE camera_logevent_startShutterClose (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_PCMS;
CREATE TABLE camera_PCMS (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Bias_Status smallint,
  Bias_current float,
  Bias_voltage float,
  Clock_Status smallint,
  Clock_current float,
  Clock_voltage float,
  FPGA_Status smallint,
  FPGA_current float,
  FPGA_voltage float,
  Low_Status smallint,
  Low_current float,
  Low_voltage float,
  OD_Status smallint,
  OD_current float,
  OD_voltage float,
  REB_ID smallint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_command_SetValue;
CREATE TABLE camera_command_SetValue (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  json_parameters varchar(32),
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_endReadout;
CREATE TABLE camera_logevent_endReadout (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_prepareToTakeImage;
CREATE TABLE camera_logevent_prepareToTakeImage (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_Shutter;
CREATE TABLE camera_Shutter (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Blade_home_1 smallint,
  Blade_home_2 smallint,
  Close_profile_1 float,
  Close_profile_2 float,
  Close_profile_3 float,
  Close_profile_4 float,
  Close_profile_5 float,
  Close_profile_6 float,
  Close_profile_7 float,
  Close_profile_8 float,
  Close_profile_9 float,
  Close_profile_10 float,
  Close_profile_11 float,
  Close_profile_12 float,
  Close_profile_13 float,
  Close_profile_14 float,
  Close_profile_15 float,
  Close_profile_16 float,
  Close_profile_17 float,
  Close_profile_18 float,
  Close_profile_19 float,
  Close_profile_20 float,
  Close_profile_21 float,
  Close_profile_22 float,
  Close_profile_23 float,
  Close_profile_24 float,
  Motor_current_1 float,
  Motor_current_2 float,
  Motor_temp_1 float,
  Motor_temp_2 float,
  Open_direction smallint,
  Open_profile_1 float,
  Open_profile_2 float,
  Open_profile_3 float,
  Open_profile_4 float,
  Open_profile_5 float,
  Open_profile_6 float,
  Open_profile_7 float,
  Open_profile_8 float,
  Open_profile_9 float,
  Open_profile_10 float,
  Open_profile_11 float,
  Open_profile_12 float,
  Open_profile_13 float,
  Open_profile_14 float,
  Open_profile_15 float,
  Open_profile_16 float,
  Open_profile_17 float,
  Open_profile_18 float,
  Open_profile_19 float,
  Open_profile_20 float,
  Open_profile_21 float,
  Open_profile_22 float,
  Open_profile_23 float,
  Open_profile_24 float,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_command_abort;
CREATE TABLE camera_command_abort (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_endShutterClose;
CREATE TABLE camera_logevent_endShutterClose (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_startSetFilter;
CREATE TABLE camera_logevent_startSetFilter (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_endInitializeGuider;
CREATE TABLE camera_logevent_endInitializeGuider (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_Prot;
CREATE TABLE camera_Prot (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Status_1 int,
  Status_2 int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_startShutterOpen;
CREATE TABLE camera_logevent_startShutterOpen (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_startUnloadFilter;
CREATE TABLE camera_logevent_startUnloadFilter (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_command_initGuiders;
CREATE TABLE camera_command_initGuiders (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  roiSpec varchar(32),
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logeventLFO;
CREATE TABLE camera_logeventLFO (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_seqNum int,
  alias varchar(128),
  URL varchar(128),
  Generator varchar(128),
  Version varchar(32),
  Checksum char(32),
  Mime_Type varchar(64),
  Byte_Size long,
  PRIMARY KEY (date_time)
);

DROP TABLE IF EXISTS camera_logevent_startLoadFilter;
CREATE TABLE camera_logevent_startLoadFilter (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_command_exitControl;
CREATE TABLE camera_command_exitControl (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_GDS;
CREATE TABLE camera_GDS (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  REB_ID smallint,
  Timing_parameter_1 int,
  Timing_parameter_2 int,
  Timing_parameter_3 int,
  Timing_parameter_4 int,
  Timing_parameter_5 int,
  Timing_parameter_6 int,
  Timing_parameter_7 int,
  Timing_parameter_8 int,
  Timing_parameter_9 int,
  Timing_parameter_10 int,
  flag_1 int,
  flag_2 int,
  flag_3 int,
  flag_4 int,
  flag_5 int,
  flag_6 int,
  flag_7 int,
  flag_8 int,
  flag_9 int,
  flag_10 int,
  flag_11 int,
  flag_12 int,
  flag_13 int,
  flag_14 int,
  flag_15 int,
  flag_16 int,
  flag_17 int,
  flag_18 int,
  flag_19 int,
  flag_20 int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_endUnloadFilter;
CREATE TABLE camera_logevent_endUnloadFilter (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_endShutterOpen;
CREATE TABLE camera_logevent_endShutterOpen (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_endTakeImage;
CREATE TABLE camera_logevent_endTakeImage (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_endInitializeImage;
CREATE TABLE camera_logevent_endInitializeImage (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_logevent_readyToTakeImage;
CREATE TABLE camera_logevent_readyToTakeImage (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_command_configure;
CREATE TABLE camera_command_configure (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  specId varchar(32),
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS camera_WAS;
CREATE TABLE camera_WAS (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Board_ID smallint,
  Board_current_1 float,
  Board_current_2 float,
  Board_current_3 float,
  Board_current_4 float,
  Board_temp_1 float,
  Board_temp_2 float,
  Board_temp_3 float,
  Board_temp_4 float,
  Board_temp_5 float,
  Board_temp_6 float,
  Board_temp_7 float,
  Board_temp_8 float,
  Board_temp_9 float,
  Board_temp_10 float,
  Board_temp_11 float,
  Board_temp_12 float,
  Board_voltage_1 float,
  Board_voltage_2 float,
  Board_voltage_3 float,
  Board_voltage_4 float,
  CABAC_MUX_1 int,
  CABAC_MUX_2 int,
  CABAC_MUX_3 int,
  CABAC_MUX_4 int,
  CCD_ID smallint,
  CCD_temp float,
  FPGACheckSum_1 int,
  FPGACheckSum_2 int,
  REB_ID smallint,
  PRIMARY KEY (date_time)
);
