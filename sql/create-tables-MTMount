DROP TABLE IF EXISTS MTMount_command_clearerror;
CREATE TABLE MTMount_command_clearerror (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_Az_CW;
CREATE TABLE MTMount_Az_CW (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  AngleDif_Actual double,
  AngleDif_ActualLVDT double,
  Positive_Power_Off_Switch tinyint,
  Negative_Power_Off_Switch tinyint,
  Axis_Status int,
  Curr_Actual_1 double,
  Curr_Actual_2 double,
  Drive_Status_1 int,
  Drive_Status_2 int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_command_enableCamWrap;
CREATE TABLE MTMount_command_enableCamWrap (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_Alt_TC;
CREATE TABLE MTMount_Alt_TC (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Drive_Surface_Temperature_1 double,
  Drive_Surface_Temperature_2 double,
  Motor_Surface_Temperature_1 double,
  Motor_Surface_Temperature_2 double,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_command_closeMirrorCover;
CREATE TABLE MTMount_command_closeMirrorCover (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_command_moveToTarget;
CREATE TABLE MTMount_command_moveToTarget (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  az_angle double,
  el_angle double,
  cablewrap_orientation varchar(32),
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_Az_TC;
CREATE TABLE MTMount_Az_TC (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Drive_Surface_Temperature_1 double,
  Drive_Surface_Temperature_2 double,
  Motor_Surface_Temperature_1 double,
  Motor_Surface_Temperature_2 double,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_command_disable;
CREATE TABLE MTMount_command_disable (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_command_disableCamWrap;
CREATE TABLE MTMount_command_disableCamWrap (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_command_SetValue;
CREATE TABLE MTMount_command_SetValue (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  json_parameters varchar(32),
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_logevent_mountError;
CREATE TABLE MTMount_logevent_mountError (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  id int,
  text varchar(32),
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_logevent_mountInPosition;
CREATE TABLE MTMount_logevent_mountInPosition (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  inposition tinyint,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_command_configure;
CREATE TABLE MTMount_command_configure (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  spec_id varchar(32),
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_MC;
CREATE TABLE MTMount_MC (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Pos_Set double,
  Pos_Actual double,
  Positive_Directional_Limit_Switch tinyint,
  Negative_Directional_Limit_Switch tinyint,
  Axis_Status int,
  Curr_Actual_1 double,
  Curr_Actual_2 double,
  Curr_Actual_3 double,
  Curr_Actual_4 double,
  Drive_Status_1 int,
  Drive_Status_2 int,
  Drive_Status_3 int,
  Drive_Status_4 int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_command_enable;
CREATE TABLE MTMount_command_enable (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_command_start;
CREATE TABLE MTMount_command_start (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  configuration varchar(32),
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_logevent_SummaryState;
CREATE TABLE MTMount_logevent_SummaryState (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  SummaryStateValue int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_logevent_mountState;
CREATE TABLE MTMount_logevent_mountState (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  id int,
  text varchar(32),
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_command_standby;
CREATE TABLE MTMount_command_standby (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_command_trackTarget;
CREATE TABLE MTMount_command_trackTarget (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  az_angle double,
  az_velocity double,
  el_angle double,
  el_velocity double,
  time double,
  cablewrap_orientation varchar(32),
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_command_exitControl;
CREATE TABLE MTMount_command_exitControl (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_logevent_AppliedSettingsMatchStart;
CREATE TABLE MTMount_logevent_AppliedSettingsMatchStart (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  appliedSettingsMatchStartIsTrue tinyint,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_DP_2;
CREATE TABLE MTMount_DP_2 (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Pos_Set double,
  Pos_Actual double,
  Pos_Actual_Section_1 double,
  Pos_Actual_Section_2 double,
  Positive_Section_1_Directional_Limit_Switch tinyint,
  Negative_Section_1_Directional_Limit_Switch tinyint,
  Positive_Section_2_Directional_Limit_Switch tinyint,
  Negative_Section_2_Directional_Limit_Switch tinyint,
  Axis_Status int,
  Curr_Actual_1 double,
  Curr_Actual_2 double,
  Drive_Status_1 int,
  Drive_Status_2 int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_Alt;
CREATE TABLE MTMount_Alt (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Angle_Set double,
  Angle_Actual double,
  EncHead_Actual_1 int,
  EncHead_Actual_2 int,
  EncHead_Actual_3 int,
  EncHead_Actual_4 int,
  Vel_Set double,
  Vel_Actual double,
  Acc_Actual double,
  Torque_Set double,
  Axis_Status int,
  Positive_Adjustable_Software_Limit tinyint,
  Negative_Adjustable_Software_Limit tinyint,
  Positive_Operational_Directional_Limit_Switch tinyint,
  Negative_Operational_Directional_Limit_Switch tinyint,
  Positive_Software_Limit tinyint,
  Negative_Software_Limit tinyint,
  Positive_Directional_Limit_Switch tinyint,
  Negative_Directional_Limit_Switch tinyint,
  Positive_Power_Off_Switch tinyint,
  Negative_Power_Off_Switch tinyint,
  Curr_Actual double,
  Drive_Status int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_Alt_OSS;
CREATE TABLE MTMount_Alt_OSS (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Local_Remote tinyint,
  Floating tinyint,
  Cooling tinyint,
  Oil tinyint,
  Pump tinyint,
  Oil_Flow double,
  Oil_Pressure double,
  Oil_Temperature double,
  Oil_Film double,
  Oil_Filter_Pressure double,
  Status int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_Bal;
CREATE TABLE MTMount_Bal (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Pos_Set double,
  Pos_Actual double,
  Positive_Directional_Limit_Switch tinyint,
  Negative_Directional_Limit_Switch tinyint,
  Axis_Status int,
  Curr_Actual_1 double,
  Curr_Actual_2 double,
  Curr_Actual_3 double,
  Curr_Actual_4 double,
  Drive_Status_1 int,
  Drive_Status_2 int,
  Drive_Status_3 int,
  Drive_Status_4 int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_command_stop;
CREATE TABLE MTMount_command_stop (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_command_openMirrorCover;
CREATE TABLE MTMount_command_openMirrorCover (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_Cam_CW;
CREATE TABLE MTMount_Cam_CW (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Angle_Actual double,
  AngleDif_Actual double,
  Positive_Directional_Limit_Switch tinyint,
  Negative_Directional_Limit_Switch tinyint,
  Axis_Status int,
  Curr_Actual_1 double,
  Curr_Actual_2 double,
  Drive_Status_1 int,
  Drive_Status_2 int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_Az;
CREATE TABLE MTMount_Az (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Angle_Set double,
  Angle_Actual double,
  EncHead_Actual_1 int,
  EncHead_Actual_2 int,
  EncHead_Actual_3 int,
  EncHead_Actual_4 int,
  Vel_Set double,
  Vel_Actual double,
  Acc_Actual double,
  Torque_Set double,
  Axis_Status int,
  Positive_Adjustable_Software_Limit tinyint,
  Negative_Adjustable_Software_Limit tinyint,
  Positive_Software_Limit tinyint,
  Negative_Software_Limit tinyint,
  Positive_Directional_Limit_Switch tinyint,
  Negative_Directional_Limit_Switch tinyint,
  Positive_Power_Off_Switch tinyint,
  Negative_Power_Off_Switch tinyint,
  Curr_Actual double,
  Drive_Status int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_logevent_mountWarning;
CREATE TABLE MTMount_logevent_mountWarning (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  id int,
  text varchar(32),
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_command_abort;
CREATE TABLE MTMount_command_abort (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_Az_OSS;
CREATE TABLE MTMount_Az_OSS (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Local_Remote tinyint,
  Floating tinyint,
  Cooling tinyint,
  Oil tinyint,
  Pump tinyint,
  Oil_Flow double,
  Oil_Pressure double,
  Oil_Temperature double,
  Oil_Film double,
  Oil_Filter_Pressure double,
  Status int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_logevent_ErrorCode;
CREATE TABLE MTMount_logevent_ErrorCode (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  errorCode int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_logevent_SettingVersions;
CREATE TABLE MTMount_logevent_SettingVersions (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  recommendedSettingVersion varchar(32),
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_command_enterControl;
CREATE TABLE MTMount_command_enterControl (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_commandLog;
CREATE TABLE MTMount_commandLog (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_seqNum int,
  name varchar(128),
  ack int,
  error int,
  PRIMARY KEY (date_time)
);

DROP TABLE IF EXISTS MTMount_logeventLFO;
CREATE TABLE MTMount_logeventLFO (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_seqNum int,
  alias varchar(128),
  URL varchar(128),
  Generator varchar(128),
  Version varchar(32),
  Checksum char(32),
  Mime_Type varchar(64),
  Byte_Size long,
  PRIMARY KEY (date_time)
);

DROP TABLE IF EXISTS MTMount_Cab_TC;
CREATE TABLE MTMount_Cab_TC (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Cabinet_Internal_Temperature_1 double,
  Cabinet_Internal_Temperature_2 double,
  Cabinet_External_Temperature_1 double,
  Cabinet_External_Temperature_2 double,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_MotionParameters;
CREATE TABLE MTMount_MotionParameters (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Azimuth_Position double,
  Azimuth_Velocity double,
  Azimuth_Acceleration double,
  Azimuth_Jerk double,
  Elevation_Position double,
  Elevation_Velocity double,
  Elevation_Acceleration double,
  ElevationJerk double,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS MTMount_DP_1;
CREATE TABLE MTMount_DP_1 (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Pos_Set double,
  Pos_Actual double,
  Pos_Actual_Section_1 double,
  Pos_Actual_Section_2 double,
  Positive_Section_1_Directional_Limit_Switch tinyint,
  Negative_Section_1_Directional_Limit_Switch tinyint,
  Positive_Section_2_Directional_Limit_Switch tinyint,
  Negative_Section_2_Directional_Limit_Switch tinyint,
  Axis_Status int,
  Curr_Actual_1 double,
  Curr_Actual_2 double,
  Drive_Status_1 int,
  Drive_Status_2 int,
  PRIMARY KEY (date_time)
);
