DROP TABLE IF EXISTS rotator_logevent_tempError;
CREATE TABLE rotator_logevent_tempError (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  device varchar(32),
  severity int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_logevent_interlock;
CREATE TABLE rotator_logevent_interlock (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  detail varchar(32),
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_logevent_error;
CREATE TABLE rotator_logevent_error (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_command_abort;
CREATE TABLE rotator_command_abort (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_commandLog;
CREATE TABLE rotator_commandLog (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_seqNum int,
  name varchar(128),
  ack int,
  error int,
  PRIMARY KEY (date_time)
);

DROP TABLE IF EXISTS rotator_logevent_tracking;
CREATE TABLE rotator_logevent_tracking (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_command_test;
CREATE TABLE rotator_command_test (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_command_disable;
CREATE TABLE rotator_command_disable (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_command_configureVelocity;
CREATE TABLE rotator_command_configureVelocity (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  vmin double,
  vmax double,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_command_SetValue;
CREATE TABLE rotator_command_SetValue (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  json_parameters varchar(32),
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_command_move;
CREATE TABLE rotator_command_move (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  angle double,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_command_enable;
CREATE TABLE rotator_command_enable (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_command_stop;
CREATE TABLE rotator_command_stop (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_Electrical;
CREATE TABLE rotator_Electrical (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  error_1 int,
  error_2 int,
  error_3 int,
  error_4 int,
  error_5 int,
  error_6 int,
  error_7 int,
  error_8 int,
  error_9 int,
  error_10 int,
  error_11 int,
  error_12 int,
  error_13 int,
  error_14 int,
  error_15 int,
  error_16 int,
  status_1 smallint,
  status_2 smallint,
  status_3 smallint,
  status_4 smallint,
  status_5 smallint,
  status_6 smallint,
  status_7 smallint,
  status_8 smallint,
  status_9 smallint,
  status_10 smallint,
  status_11 smallint,
  status_12 smallint,
  status_13 smallint,
  status_14 smallint,
  status_15 smallint,
  status_16 smallint,
  voltage_1 int,
  voltage_2 int,
  voltage_3 int,
  voltage_4 int,
  voltage_5 int,
  voltage_6 int,
  voltage_7 int,
  voltage_8 int,
  voltage_9 int,
  voltage_10 int,
  voltage_11 int,
  voltage_12 int,
  voltage_13 int,
  voltage_14 int,
  voltage_15 int,
  voltage_16 int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_LimitSensors;
CREATE TABLE rotator_LimitSensors (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  liftoff_1 smallint,
  liftoff_2 smallint,
  liftoff_3 smallint,
  liftoff_4 smallint,
  liftoff_5 smallint,
  liftoff_6 smallint,
  liftoff_7 smallint,
  liftoff_8 smallint,
  liftoff_9 smallint,
  liftoff_10 smallint,
  liftoff_11 smallint,
  liftoff_12 smallint,
  liftoff_13 smallint,
  liftoff_14 smallint,
  liftoff_15 smallint,
  liftoff_16 smallint,
  liftoff_17 smallint,
  liftoff_18 smallint,
  llimit_1 smallint,
  llimit_2 smallint,
  llimit_3 smallint,
  llimit_4 smallint,
  llimit_5 smallint,
  llimit_6 smallint,
  llimit_7 smallint,
  llimit_8 smallint,
  llimit_9 smallint,
  llimit_10 smallint,
  llimit_11 smallint,
  llimit_12 smallint,
  llimit_13 smallint,
  llimit_14 smallint,
  llimit_15 smallint,
  llimit_16 smallint,
  llimit_17 smallint,
  llimit_18 smallint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_logevent_ErrorCode;
CREATE TABLE rotator_logevent_ErrorCode (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  errorCode int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_logevent_trackLost;
CREATE TABLE rotator_logevent_trackLost (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_logevent_AppliedSettingsMatchStart;
CREATE TABLE rotator_logevent_AppliedSettingsMatchStart (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  appliedSettingsMatchStartIsTrue tinyint,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_logevent_moveOK;
CREATE TABLE rotator_logevent_moveOK (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_TC;
CREATE TABLE rotator_TC (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  error_1 float,
  error_2 float,
  error_3 float,
  error_4 float,
  error_5 float,
  error_6 float,
  error_7 float,
  error_8 float,
  error_9 float,
  error_10 float,
  error_11 float,
  error_12 float,
  error_13 float,
  error_14 float,
  error_15 float,
  error_16 float,
  setpoint_1 float,
  setpoint_2 float,
  setpoint_3 float,
  setpoint_4 float,
  setpoint_5 float,
  setpoint_6 float,
  setpoint_7 float,
  setpoint_8 float,
  setpoint_9 float,
  setpoint_10 float,
  setpoint_11 float,
  setpoint_12 float,
  setpoint_13 float,
  setpoint_14 float,
  setpoint_15 float,
  setpoint_16 float,
  status_1 smallint,
  status_2 smallint,
  status_3 smallint,
  status_4 smallint,
  status_5 smallint,
  status_6 smallint,
  status_7 smallint,
  status_8 smallint,
  status_9 smallint,
  status_10 smallint,
  status_11 smallint,
  status_12 smallint,
  status_13 smallint,
  status_14 smallint,
  status_15 smallint,
  status_16 smallint,
  temperature_1 float,
  temperature_2 float,
  temperature_3 float,
  temperature_4 float,
  temperature_5 float,
  temperature_6 float,
  temperature_7 float,
  temperature_8 float,
  temperature_9 float,
  temperature_10 float,
  temperature_11 float,
  temperature_12 float,
  temperature_13 float,
  temperature_14 float,
  temperature_15 float,
  temperature_16 float,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_logevent_limit;
CREATE TABLE rotator_logevent_limit (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  rlimit varchar(32),
  type varchar(32),
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_logeventLFO;
CREATE TABLE rotator_logeventLFO (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_seqNum int,
  alias varchar(128),
  URL varchar(128),
  Generator varchar(128),
  Version varchar(32),
  Checksum char(32),
  Mime_Type varchar(64),
  Byte_Size long,
  PRIMARY KEY (date_time)
);

DROP TABLE IF EXISTS rotator_command_start;
CREATE TABLE rotator_command_start (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  configuration varchar(32),
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_command_track;
CREATE TABLE rotator_command_track (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  angle double,
  velocity double,
  tai double,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_logevent_SummaryState;
CREATE TABLE rotator_logevent_SummaryState (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  SummaryStateValue int,
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_command_exitControl;
CREATE TABLE rotator_command_exitControl (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_command_standby;
CREATE TABLE rotator_command_standby (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_Position;
CREATE TABLE rotator_Position (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  Calibrated_1 float,
  Calibrated_2 float,
  Calibrated_3 float,
  Calibrated_4 float,
  Calibrated_5 float,
  Calibrated_6 float,
  Calibrated_7 float,
  Calibrated_8 float,
  Calibrated_9 float,
  Calibrated_10 float,
  Calibrated_11 float,
  Calibrated_12 float,
  Calibrated_13 float,
  Calibrated_14 float,
  Calibrated_15 float,
  Calibrated_16 float,
  Calibrated_17 float,
  Calibrated_18 float,
  Calibrated_19 float,
  Calibrated_20 float,
  Calibrated_21 float,
  Calibrated_22 float,
  Calibrated_23 float,
  Calibrated_24 float,
  Calibrated_25 float,
  Calibrated_26 float,
  Calibrated_27 float,
  Calibrated_28 float,
  Calibrated_29 float,
  Calibrated_30 float,
  Calibrated_31 float,
  Calibrated_32 float,
  Raw_1 int,
  Raw_2 int,
  Raw_3 int,
  Raw_4 int,
  Raw_5 int,
  Raw_6 int,
  Raw_7 int,
  Raw_8 int,
  Raw_9 int,
  Raw_10 int,
  Raw_11 int,
  Raw_12 int,
  Raw_13 int,
  Raw_14 int,
  Raw_15 int,
  Raw_16 int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_command_configureAcceleration;
CREATE TABLE rotator_command_configureAcceleration (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  amin double,
  amax double,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_logevent_SettingVersions;
CREATE TABLE rotator_logevent_SettingVersions (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  recommendedSettingVersion varchar(32),
  priority int,
  PRIMARY KEY (date_time)
);
DROP TABLE IF EXISTS rotator_command_enterControl;
CREATE TABLE rotator_command_enterControl (
  date_time DATETIME(6),
  private_revCode char(32),
  private_sndStamp double precision,
  private_rcvStamp double precision,
  private_seqNum int,
  private_origin int,
  private_host int,
  state tinyint,
  PRIMARY KEY (date_time)
);
