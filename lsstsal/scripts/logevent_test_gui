#!/usr/bin/wish
set SUBSYS [lindex $argv 0]
set SAL_WORK_DIR $env(SAL_WORK_DIR)
source $SAL_WORK_DIR/idl-templates/validated/[set SUBSYS]_evtdef.tcl
set my 0
wm geometry  . 400x400
wm title . "$SUBSYS Log Event generator"
foreach i [lsort $EVENT_ALIASES($SUBSYS)] {
   set iw [string tolower $i]
   set y 0
   if { [info exists EVTS($SUBSYS,$i,param)] } {
      toplevel .$iw -bg gray -width 600 -height 400 -bg LightGray
      wm title .$iw "$SUBSYS Log Event - $i"
      wm withdraw .$iw
      set y 40
      label .$iw.l -text "Parameters for $i"
      place .$iw.l -x 20 -y 10
      foreach p  $EVTS($SUBSYS,$i,param) {
         set t [lindex $p 0]
         set name [lindex $p 1]
         label .$iw.par$name -text "$name (type is $t)  : "
         entry .$iw.val$name -width 10 -bg LightBlue -textvariable PARS([set i]_$name)
         place .$iw.par$name -x 40 -y $y
         place .$iw.val$name -x 240 -y $y
         incr y 30
      }
      wm geometry .$iw 400x[expr $y+50]
      wm protocol .$iw WM_DELETE_WINDOW "wm withdraw .$iw"
      button .$iw.doit -text "Send Log Event" -width 44 -command "sendlogevent $i" -bg green
      place .$iw.doit -x 40 -y $y
      button .evt$i -text "$i" -width 44 -command "wm deiconify .$iw"
      place .evt$i -x 10 -y $my
   } else {
     button .evt$i -text "$i" -width 44 -command "sendlogevent $i"
     place .evt$i -x 10 -y $my
   }
   incr my 30
}
button .done -text "Exit Event Generator" -width 44 -bg orange -command exit
place .done -x 10 -y $my
incr my 40
wm geometry . 400x$my


proc sendlogevent { alias } {
global EVTS SUBSYS PARS TIMEOUT SAL_WORK_DIR
   .evt$alias configure -bg orange
   set cargs $EVTS($SUBSYS,$alias)
   set message  [join $cargs " "]
   set ready 1
   set modifiers ""
   if { [info exists EVTS($SUBSYS,$alias,param)] } {
      .evt$alias configure -bg orange
      foreach p  $EVTS($SUBSYS,$alias,param) {
         set name [lindex $p 1]
         set modifiers "$modifiers $PARS([set alias]_[set name])"
         if { [string trim $PARS([set alias]_[set name])] == "" } {set ready 0}
      }
   }
   if { $ready } {
     catch {.evt$alias configure -bg orange}
     puts stdout "Starting $SUBSYS Log Event Listener"
     set LISTENER [exec xterm -geometry +400+10 -T "$SUBSYS Log Event Listener" -e $SAL_WORK_DIR/$SUBSYS/cpp/src/sacpp_[set SUBSYS]_[set alias]_log &]
     after 5000
     exec gnome-terminal -e "$SAL_WORK_DIR/$SUBSYS/cpp/src/sacpp_[set SUBSYS]_[set alias]_send  $modifiers"
     after 5000
     exec kill -9 $LISTENER
     .evt$alias configure -bg green
   } else { 
     set it [tk_dialog .d "Missing parameter" "All parameters must have a value" {} -1 "OK"]
   } 
}

#if { [lindex [exec ospl list] end] != "running" } {
#   puts stdout "Starting OSPL daemon"
#   exec ospl start
#   exec sleep 5
#}




